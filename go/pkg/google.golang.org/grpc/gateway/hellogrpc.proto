syntax = "proto3";

package helloworld;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "openapiv3/annotations.proto";

option go_package = "grpc/hellogrpc";
option (openapi.v3.document) = {
  info: {
    title: "Hello Work!";
    version: "v0.0.1";
    description: "Greeter Server";
    contact: {
      name: "Dokiy";
      url: "https://github.com/Dokiys";
      email: "-";
    }
    license: {
      name: "MIT License";
      url: "";
    }
  }
  components: {
    security_schemes: {
      additional_properties: [
        {
          name: "BasicAuth";
          value: {
            security_scheme: {
              type: "http";
              scheme: "basic";
            }
          }
        }
      ]
    }
  }
};

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello(HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      post: "/v1/say_hello"
      body: "*"
    };
  }
  // Sends a greeting
  rpc SayHi(HiRequest) returns (HiReply) {
    option (google.api.http) = {
      post: "/v1/say_hi"
      body: "*"
    };
  }
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}
// The response message containing the greetings
message HelloReply {
  string message = 1;
}

// The request message containing the user's name.
message HiRequest {
  option (openapi.v3.schema) = {
    title: "This is an overridden HiRequest schema title";
    // 等同于使用 [(google.api.field_behavior) = REQUIRED];
    required: ["name"]
  };

  string name = 1 ;
}
// The response message containing the greetings
message HiReply {
  string message = 1 [
    (openapi.v3.property) = {
      title: "this is an overriden field schema title";
      max_length: 255;
    }
  ];
}
