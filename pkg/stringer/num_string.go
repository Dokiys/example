// Code generated by "stringer -type=Num,Code"; DO NOT EDIT.

package stringer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[One-0]
	_ = x[Two-1]
	_ = x[Three-2]
	_ = x[Four-3]
	_ = x[Five-4]
}

const _Num_name = "OneTwoThreeFourFive"

var _Num_index = [...]uint8{0, 3, 6, 11, 15, 19}

func (i Num) String() string {
	if i < 0 || i >= Num(len(_Num_index)-1) {
		return "Num(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Num_name[_Num_index[i]:_Num_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Yi-12]
	_ = x[Er-2]
}

const (
	_Code_name_0 = "Er"
	_Code_name_1 = "Yi"
)

func (i Code) String() string {
	switch {
	case i == 2:
		return _Code_name_0
	case i == 12:
		return _Code_name_1
	default:
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
